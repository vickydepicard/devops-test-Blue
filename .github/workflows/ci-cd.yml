name: CI/CD Pipeline  # Nom du workflow GitHub Actions

on:
  push:
    branches: [ main ]  # Déclenchement automatique sur la branche "main"

env:
  PROJECT_ID:     ${{ secrets.GCP_PROJECT_ID }}       # ID du projet GCP, à définir dans les Secrets GitHub
  REGION:         ${{ secrets.GCP_REGION }}           # Région GCP (ex: europe-west1), depuis les Secrets
  SERVICE_NAME:   php-fpm-service                      # Nom du service Cloud Run à créer / mettre à jour
  IMAGE_NAME:     php-fpm-app                          # Nom de l’image Docker
  REPOSITORY:     my-repo                              # Nom du dépôt Artifact Registry (Artifact Registry)
  HOST:           europe-docker.pkg.dev                # Domaine du registre Docker (Artifact Registry Europe)

permissions:
  contents: read  # Autorise l’accès en lecture au code
  id-token: write # Nécessaire pour google-github-actions/auth@v2

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest  # Exécute ce job sur une VM Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        # Récupère le code source du dépôt pour les étapes suivantes

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        # Authentifie le runner GitHub auprès de GCP avec le compte de service

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker $HOST
        # Configure Docker pour utiliser les credentials GCP pour le push/pull

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        # Active Buildx pour builder des images multi-plateformes si besoin

      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: modules/cloud_run/                                      # Contexte de build (répertoire de l’app)
          file: modules/cloud_run/Dockerfile                              # Chemin du Dockerfile
          push: true                                                       # Active le push vers le registre
          tags: $HOST/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
        # Construit l’image Docker et la pousse vers Artifact Registry

  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: build-and-push  # Attend que build-and-push soit terminé avec succès

    steps:
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        # Ré-authentifie GCP pour la phase de déploiement

      - name: Deploy service
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE_NAME }}                                                     # Nom du service Cloud Run
          image: $HOST/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest  # Image Docker à déployer
          region: ${{ env.REGION }}                                                             # Région de déploiement
          allow-unauthenticated: true                                                           # Rend le service accessible publiquement
        # Déploie l’image sur Cloud Run avec le CLI GCP gcloud

