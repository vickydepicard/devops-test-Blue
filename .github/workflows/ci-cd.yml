name: CI/CD Pipeline
# Nom du workflow GitHub Actions

on:
  push:
    branches:
      - main
# Déclenchement du workflow uniquement sur les push vers la branche 'main'

env:
  PROJECT_ID: ${{ secrets.GCLOUD_PROJECT }}
  REGION: ${{ secrets.GCLOUD_REGION }}
  SERVICE_NAME: php-fpm-service
  IMAGE_NAME: php-fpm-app
  GCR_HOSTNAME: ${{ secrets.GCR_HOSTNAME }}
# Variables d'environnement utilisées dans le workflow, récupérées depuis les secrets GitHub

jobs:
  build-deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest
    # Exécute ce job sur une machine virtuelle Ubuntu récente

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        # Récupère le code source de la branche 'main' du repository

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_SA_KEY }}
          export_default_credentials: true
        # Installe et configure le SDK Google Cloud avec le compte de service pour authentification

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker ${{ env.GCR_HOSTNAME }}
        # Configure Docker pour pouvoir pousser des images vers Google Container Registry (GCR)

      - name: Build Docker Image
        run: docker build -t ${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest .
        # Construit l'image Docker à partir du Dockerfile dans le répertoire racine du repo

      - name: Push Docker Image to GCR
        run: docker push ${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest
        # Pousse l'image Docker construite vers le registre Google Container Registry

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.GCR_HOSTNAME }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated
        # Déploie l'image Docker sur Cloud Run dans la région spécifiée
        # Rend le service accessible publiquement (non authentifié)

